<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        YRWE+ECp/wERPMgVK6KxgwAAAABJRU5ErkJggg==
</value>
  </data>
</root>